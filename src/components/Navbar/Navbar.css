/* --- VINTAGE NAVBAR STYLES --- */
/* Ensure :root variables from your main vintage CSS are available */

.vintage-navbar {
  background-color: var(--color-vintage-bg-darker);
  height: 85px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.1rem;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 999; /* Navbar itself is on top */
  box-shadow: 0 3px 10px rgba(44, 27, 14, 0.2);
  transition: background-color 0.4s ease, box-shadow 0.4s ease, height 0.4s ease;
  border-bottom: 2px solid var(--color-vintage-accent-gold);
  /* overflow: hidden; */ /* CRITICAL: REMOVE THIS if it was here, to allow mobile menu to show */
}

.vintage-navbar.scrolled {
  background-color: var(--color-vintage-heading-text);
  height: 75px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  border-bottom-color: var(--color-vintage-accent-red);
}
.vintage-navbar.scrolled .nav-links,
.vintage-navbar.scrolled .logo-sub-text,
.vintage-navbar.scrolled .menu-icon {
    color: var(--color-vintage-bg);
}
.vintage-navbar.scrolled .logo-main-text {
    color: var(--color-vintage-accent-gold);
}
.vintage-navbar.scrolled .nav-links:hover,
.vintage-navbar.scrolled .nav-item.active .nav-links {
    color: var(--color-vintage-accent-gold);
}
.vintage-navbar.scrolled .nav-link-underline {
    background-color: var(--color-vintage-accent-red);
}
.vintage-navbar.scrolled .nav-item.active .nav-link-underline {
    background-color: var(--color-vintage-accent-gold);
}


.navbar-container.vintage-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  width: 90%;
  max-width: var(--container-width-vintage, 1100px);
  margin: 0 auto;
  padding: 0 20px;
  position: relative; /* For z-index context of children if needed */
  z-index: 1; /* Ensure container content is above shine effect if shine is direct child of .vintage-navbar */
}

/* --- TEXT LOGO STYLES --- */
.navbar-logo-link-text {
  color: var(--color-vintage-heading-text);
  text-decoration: none;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  line-height: 1.1;
  transition: transform 0.3s ease;
  padding: 5px 0;
  position: relative; /* Ensure logo is clickable over shine effect if shine is not contained properly */
  z-index: 2;
}
.navbar-logo-link-text:hover { transform: scale(1.03); }
.logo-main-text {
  font-family: var(--font-vintage-heading); font-weight: 900; font-size: 2.2rem;
  color: var(--color-vintage-accent-red); letter-spacing: -1px; text-transform: uppercase;
}
.logo-sub-text {
  font-family: var(--font-vintage-accent); font-size: 0.75rem; color: var(--color-vintage-text);
  letter-spacing: 0.5px; text-transform: uppercase; margin-top: -2px; opacity: 0.9;
}

/* Desktop Nav Menu */
.nav-menu {
  display: flex; /* Hidden on mobile by media query, displayed flex on desktop */
  align-items: center; list-style: none; text-align: center; margin: 0; padding: 0;
  position: relative; /* Ensure menu is clickable over shine effect */
  z-index: 2;
}
.nav-item { height: 100%; display: flex; align-items: center; }
.nav-links {
  color: var(--color-vintage-text); font-family: var(--font-vintage-subheading); font-weight: 700;
  display: flex; align-items: center; text-decoration: none; padding: 0.5rem 1.2rem;
  height: 100%; position: relative; transition: color 0.3s ease;
  letter-spacing: 0.5px; text-transform: uppercase; font-size: 0.95rem;
}
.nav-links:hover { color: var(--color-vintage-accent-red); }
.nav-link-underline {
  position: absolute; bottom: 9px; left: 50%; transform: translateX(-50%);
  width: 0; height: 2px; background-color: var(--color-vintage-accent-red);
  transition: width 0.4s cubic-bezier(0.645, 0.045, 0.355, 1); border-radius: 1px;
}
.nav-links:hover .nav-link-underline { width: 70%; }
.nav-item.active .nav-links { color: var(--color-vintage-accent-red); }
.nav-item.active .nav-link-underline {
  width: 70%; background-color: var(--color-vintage-accent-gold);
  animation: activePulse 1.5s infinite alternate ease-in-out;
}
@keyframes activePulse {
    0% { opacity: 0.7; transform: translateX(-50%) scaleX(0.95); }
    100% { opacity: 1; transform: translateX(-50%) scaleX(1.05); }
}

/* Shine Effect - needs careful z-indexing if navbar doesn't have overflow:hidden */
.navbar-shine-effect {
    position: absolute; top: 0; left: -150%; width: 70%; height: 100%;
    background: linear-gradient(to right, transparent 0%, rgba(245, 245, 220, 0.15) 50%, transparent 100%);
    transform: skewX(-25deg); animation: sweepShine 15s infinite linear;
    animation-delay: 3s; pointer-events: none;
    z-index: 0; /* Behind .navbar-container and its contents */
}
@keyframes sweepShine {
    0% { left: -150%; } 50% { left: 150%; } 100% { left: 150%; }
}

/* Hamburger Menu Icon */
.menu-icon {
  display: none; /* Hidden on desktop */
  color: var(--color-vintage-text); font-size: 1.8rem; cursor: pointer;
  position: relative; /* Ensure it's part of the .navbar-container flow for z-indexing */
  z-index: 1000; /* High z-index to be clickable */
}

/* Responsive Styles for Mobile Menu */
@media screen and (max-width: 960px) {
  .navbar-container.vintage-container {
    /* Ensure logo and icon are spaced even if menu items are removed from flow */
    justify-content: space-between;
  }

  .nav-menu { /* Mobile menu - initial hidden state */
    display: flex; /* Needs to be flex for flex-direction to work */
    flex-direction: column;
    width: 100%;
    position: absolute; /* Positioned relative to .vintage-navbar (fixed) */
    top: 100%; /* Start right below the navbar (e.g., 85px or 75px) */
    /* This will be controlled by navbarRef.current?.offsetHeight in a real scenario if height varies more */
    /* For CSS only, if navbar height is fixed or has two states: */
    /* top: 85px; /* Initial navbar height */
    left: -100%;
    opacity: 0;
    transition: left 0.4s ease-in-out, opacity 0.3s ease-in-out;
    background-color: var(--color-vintage-bg-darker);
    padding: 10px 0; /* Reduced padding slightly */
    box-shadow: 0 5px 10px rgba(44, 27, 14, 0.2);
    pointer-events: none;
  }

  .vintage-navbar.scrolled .nav-menu {
      /* top: 75px; /* Match scrolled navbar height */
      /* Background color for scrolled state needs to be on .nav-menu.active or conditional in JS */
      /* For now, let's assume the background change is handled if .active is on .scrolled */
  }
  .vintage-navbar.scrolled .nav-menu.active { /* When navbar is scrolled AND menu is active */
      background-color: var(--color-vintage-heading-text);
  }


  .nav-menu.active { /* Mobile menu - visible state */
    left: 0;
    opacity: 1;
    z-index: 998; /* Just below the main navbar (999) */
    pointer-events: auto;
  }

  /* Adjust top based on whether navbar is scrolled */
  .vintage-navbar:not(.scrolled) .nav-menu { top: 85px; }
  .vintage-navbar.scrolled .nav-menu    { top: 75px; }


  .nav-item { width: 100%; height: auto; }
  .nav-links {
    text-align: center; padding: 1rem; /* Adjusted padding */
    width: 100%; display: block;
    border-bottom: 1px dotted var(--color-vintage-border);
  }
  .vintage-navbar.scrolled .nav-links { border-bottom-color: rgba(245, 245, 220, 0.2); }
  .nav-item:last-child .nav-links { border-bottom: none; }
  .nav-links:hover .nav-link-underline,
  .nav-item.active .nav-link-underline { width: 40%; bottom: 6px; /* Adjusted */ }

  .menu-icon {
    display: block; /* Show hamburger icon */
    /* position: absolute; No, keep it in flex flow of navbar-container */
    /* top: 50%; right: 20px; transform: translateY(-50%); */
    /* The above absolute positioning would take it out of flex flow.
       If .navbar-container is space-between, it will be naturally on the right.
    */
  }
  .vintage-navbar.scrolled .menu-icon { color: var(--color-vintage-bg); }
}